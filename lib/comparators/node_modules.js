/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

'use strict';

const debug = require("debug")("sizewatcher:node_modules");
const { execSync } = require("child_process");
const du = require("du");
const path = require("path");
const fs = require("fs");

async function getSize(dir) {
    process.chdir(dir);
    debug(`installing node dependencies inside ${dir}...`);
    if (fs.existsSync("package-lock.json") || fs.existsSync("npm-shrinkwrap.json")) {
        execSync("npm ci");
    } else {
        execSync("npm install");
    }
    debug(`calculating folder size of ${dir}/node_modules...`);
    return du(path.join(dir, "node_modules"));
}

async function costOfModules(dir) {
    process.chdir(dir);
    debug(`running cost-of-modules...`);
    const out = execSync("npx cost-of-modules --less --no-install").toString();

    const PREFIX = "\nCalculating...\n\n\n";
    if (out.startsWith(PREFIX)) {
        return out.substring(PREFIX.length);
    }
    return out;
}

module.exports = {

    shouldRun: async function(dir) {
        return fs.existsSync(path.join(dir, "package.json"));
    },

    compare: async function(before, after) {
        const beforeSize = await getSize(before.dir);
        const afterSize = await getSize(after.dir);
        const details = await costOfModules(after.dir);

        return {
            name: "node_modules",
            beforeSize,
            afterSize,
            detailsLabel: "Largest node modules",
            details
        };
    }
};